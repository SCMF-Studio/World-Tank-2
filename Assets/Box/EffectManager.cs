using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class EffectManager : MonoBehaviour
{
    public List<Transform> effectPositions; // ??????? ?? ??????
    public GameObject effectPrefab; // ?????? ???????
    private Queue<Effect> activeEffects = new Queue<Effect>(); // ??????? ????????

    void Update()
    {
        // ????? ????? ????????? ??????? ???????? (???? ?????)
    }

    public void AddEffect(string effectName, float duration)
    {
        // ???? ???????????? ?????????? ???????? ??????????, ??????? ??????
        if (activeEffects.Count >= effectPositions.Count)
        {
            RemoveOldestEffect();
        }

        // ??????? ????? ??????
        GameObject effectUI = Instantiate(effectPrefab, effectPositions[activeEffects.Count]);
        Effect newEffect = new Effect(effectName, duration, effectUI);
        activeEffects.Enqueue(newEffect);

        // ????????? ???????? ??? ??????????????? ???????? ???????
        StartCoroutine(HandleEffectDuration(newEffect));
    }

    private void RemoveOldestEffect()
    {
        if (activeEffects.Count > 0)
        {
            Effect oldestEffect = activeEffects.Dequeue();
            Destroy(oldestEffect.UIElement);
        }
        UpdateEffectPositions();
    }

    private IEnumerator HandleEffectDuration(Effect effect)
    {
        yield return new WaitForSeconds(effect.Duration);

        // ??????? ?????? ?? ????????? ???????
        if (activeEffects.Contains(effect))
        {
            activeEffects.Dequeue();
            Destroy(effect.UIElement);
            UpdateEffectPositions();
        }
    }

    private void UpdateEffectPositions()
    {
        int index = 0;
        foreach (var effect in activeEffects)
        {
            effect.UIElement.transform.position = effectPositions[index].position;
            index++;
        }
    }
}

[System.Serializable]
public class Effect
{
    public string Name;
    public float Duration;
    public GameObject UIElement;

    public Effect(string name, float duration, GameObject uiElement)
    {
        Name = name;
        Duration = duration;
        UIElement = uiElement;
    }
}
